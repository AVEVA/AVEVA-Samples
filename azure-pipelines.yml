# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml


  
jobs:      

- job: SDSDotNet

  pool:
    vmImage: 'Ubuntu-16.04'
  steps :

    # Download Secure File
    # Download a secure file to a temporary location on the build or release agent
    - task: DownloadSecureFile@1
      inputs:
        secureFile: prod_appsettings.json


    # Copy Files
    # Copy files from source folder to target folder using match patterns (The match patterns will only match file paths, not folder paths)
    - task: CopyFiles@2
      inputs:
        sourceFolder: $(Agent.TempDirectory)
        contents: prod_appsettings.json
        targetFolder: '$(Build.SourcesDirectory)/ocs_samples/basic_samples/SDS/DotNet/SdsClientLibraries/SdsClientLibraries/'
        #cleanTargetFolder: false # Optional  
        overWrite: true # Optional
        #flattenFolders: false # Optional 
      displayName: copy file

    - script: |
        mv prod_appsettings.json appsettings.json
      workingDirectory: $(Build.SourcesDirectory)/ocs_samples/basic_samples/SDS/DotNet/SdsClientLibraries/SdsClientLibraries/
      displayName: 'rename config file'     
      
    - script: |
        dotnet restore
        dotnet test
      workingDirectory: $(Build.SourcesDirectory)/ocs_samples/basic_samples/SDS/DotNet/SdsClientLibraries/SdsClientLibrariesCoreTests/
      displayName: 'Run Test'
    
- job: SDSDotNetAPI

  pool:
    vmImage: 'Ubuntu-16.04'
  steps :

    # Download Secure File
    # Download a secure file to a temporary location on the build or release agent
    - task: DownloadSecureFile@1
      inputs:
        secureFile: prod_appsettings.json


    # Copy Files
    # Copy files from source folder to target folder using match patterns (The match patterns will only match file paths, not folder paths)
    - task: CopyFiles@2
      inputs:
        sourceFolder: $(Agent.TempDirectory)
        contents: prod_appsettings.json
        targetFolder: '$(Build.SourcesDirectory)/ocs_samples/basic_samples/SDS/DotNet/SdsRestApiCore/SdsRestApiCore/'
        #cleanTargetFolder: false # Optional  
        overWrite: true # Optional
        #flattenFolders: false # Optional 
      displayName: copy file

    - script: |
        mv prod_appsettings.json appsettings.json
      workingDirectory: $(Build.SourcesDirectory)/ocs_samples/basic_samples/SDS/DotNet/SdsRestApiCore/SdsRestApiCore/
      displayName: 'rename config file'         
      
    - script: |
        dotnet restore
        dotnet test
      workingDirectory: $(Build.SourcesDirectory)/ocs_samples/basic_samples/SDS/DotNet/SdsRestApiCore/SdsRestApiCoreTest/
      displayName: 'Run Test' 

- job: SDSangJS

  pool:
    vmImage: 'Ubuntu-16.04'
    
  steps :
    - task: NodeTool@0 
      inputs:
        versionSpec: '8.x' # replace this value with the version that you need for your project

    # Download Secure File
    # Download a secure file to a temporary location on the build or release agent
    - task: DownloadSecureFile@1
      inputs:
        secureFile: prod_oidc.config.json

    # Download Secure File
    # Download a secure file to a temporary location on the build or release agent
    - task: DownloadSecureFile@1
      inputs:
        secureFile: prod_sdsconfig.json
        
    # Download Secure File
    # Download a secure file to a temporary location on the build or release agent
    - task: DownloadSecureFile@1
      inputs:
        secureFile: prod_config.json


    # Copy Files  
    # Copy files from source folder to target folder using match patterns (The match patterns will only match file paths, not folder paths)
    - task: CopyFiles@2
      inputs:
        sourceFolder: $(Agent.TempDirectory)
        contents: prod_oidc.config.json
        targetFolder: '$(Build.SourcesDirectory)/ocs_samples/basic_samples/SDS/JavaScript/Angular/src/app/config/' 
        #cleanTargetFolder: false # Optional 
        overWrite: true # Optional
        #flattenFolders: false # Optional
      displayName: copy file 1
      

    # Copy Files 
    # Copy files from source folder to target folder using match patterns (The match patterns will only match file paths, not folder paths)
    - task: CopyFiles@2
      inputs:
        sourceFolder: $(Agent.TempDirectory)
        contents: prod_sdsconfig.json
        targetFolder: '$(Build.SourcesDirectory)/ocs_samples/basic_samples/SDS/JavaScript/Angular/src/app/config/' 
        #cleanTargetFolder: false # Optional 
        overWrite: true # Optional
        #flattenFolders: false # Optional
      displayName: copy file 2

    # Copy Files   ocs_samples\basic_samples\SDS\JavaScript\Angular\e2e\src\config.json
    # Copy files from source folder to target folder using match patterns (The match patterns will only match file paths, not folder paths)
    - task: CopyFiles@2
      inputs:
        sourceFolder: $(Agent.TempDirectory)
        contents: prod_config.json
        targetFolder: '$(Build.SourcesDirectory)/ocs_samples/basic_samples/SDS/JavaScript/Angular/e2e/src/' 
        #cleanTargetFolder: false # Optional 
        overWrite: true # Optional
        #flattenFolders: false # Optional
      displayName: copy file 3

    - script: |
        mv prod_oidc.config.json oidc.config.json
      workingDirectory: '$(Build.SourcesDirectory)/ocs_samples/basic_samples/SDS/JavaScript/Angular/src/app/config/'
      displayName: 'rename config file'

    - script: |
        mv prod_sdsconfig.json sdsconfig.json
      workingDirectory: '$(Build.SourcesDirectory)/ocs_samples/basic_samples/SDS/JavaScript/Angular/src/app/config/'
      displayName: 'rename config file2'

    - script: |
        mv prod_config.json config.json
      workingDirectory: '$(Build.SourcesDirectory)/ocs_samples/basic_samples/SDS/JavaScript/Angular/e2e/src/'
      displayName: 'rename config file3'
      
      
    - script: |
       npm install -g @angular/cli
       npx webdriver-manager update
       npm install
      workingDirectory: $(Build.SourcesDirectory)/ocs_samples/basic_samples/SDS/JavaScript/Angular/
      displayName: 'Install tools'      
      
    - script: |
        ng e2e
      displayName: 'Test that the app runs'
      workingDirectory: $(Build.SourcesDirectory)/ocs_samples/basic_samples/SDS/JavaScript/Angular/


