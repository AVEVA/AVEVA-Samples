<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OSIsoft.Qi.Http.StreamRepository</name>
    </assembly>
    <members>
        <member name="T:OSIsoft.Qi.Http.Repository.StreamDataController">
            <name>
            Qi Stream Data
            </name>
            <summary>
            Data access method for Qi data streams
            </summary>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.GetType(System.String)">
            <name>
            Get Stream Qi Type
            </name> 
            <summary>
            Get a type for a Qi stream
            </summary>
            <param name="streamId">Qi stream name</param>
            <returns>Qi type definition</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.GetValue(System.String,System.String)">
            <name>
            Get Value
            </name> 
            <summary>
            Returns a single value from a Qi data stream according to the configured stream behavior
            </summary>
            <param name="streamId">The id of the Qi stream</param>
            <param name="index">The index of the value to return</param>
            <returns>Return value</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.GetValues(System.String,System.String[])">
            <name>
            Get Values
            </name> 
            <summary>
            Select a set of values from a Qi data stream.
            </summary>
            <param name="streamId">Qi stream name</param>
            <param name="index">An array of indexes to return a value for</param>
            <returns>data values</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.CreateGetValuesRequest(System.String,System.String[])">
            <name>
            Get Values
            </name> 
            <summary>
            Select a set of values from a Qi data stream.
            </summary>
            <param name="streamId">Qi stream name</param>
            <param name="index">An array of indexes to return a value for</param>
            <returns>data values</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.GetValues(System.String,System.String,System.String,System.Int32)">
            <name>
            Get Values at intervals
            </name> 
            <summary>
            Select a set of values from a Qi data stream.
            A value will be returned for the start and end index and (count - 2) other values at evenly spaces intervals between the start and end. 
            </summary>
            <param name="streamId">Qi stream name</param>
            <param name="startIndex">Qi data stream value index start value</param>
            <param name="endIndex">Qi data stream value index end value</param>
            <param name="count">The number of values to return</param>
            <returns>data values</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.GetValues(System.String,System.String)">
            <name>
            Get Values
            </name> 
            <summary>
            Select a set of values from a Qi data stream.
            </summary>
            <param name="streamId">Qi stream name</param>
            <param name="filterExpression">An array of indexes to return a value for</param>
            <returns>data values</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.GetDistinctValue(System.String,System.String)">
            <name>
            Get Distinct Value
            </name> 
            <summary>
            Returns a single discrete value from a Qi data stream
            </summary>
            <param name="streamId">The id of Qi stream</param>
            <param name="index">The index of the value to return</param>
            <returns>Return value</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.FindDistinctValue(System.String,System.String,OSIsoft.Qi.QiSearchMode)">
            <name>
            Find Distinct Value
            </name> 
            <summary>
            Find a single discrete value in a Qi data stream
            </summary>
            <param name="streamId">The id of Qi stream</param>
            <param name="index">The index of the value to return</param>
            <param name="mode">The search mode</param>
            <returns>Return value</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.GetFirstValue(System.String)">
            <name>
            Get First Value
            </name> 
            <summary>
            Get the first value in a Qi data stream
            </summary>
            <param name="streamId">The id of Qi stream</param>
            <returns>Return value</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.GetLastValue(System.String)">
            <name>
            Get Last Value
            </name> 
            <summary>
            Get the last value in a Qi data stream
            </summary>
            <param name="streamId">The id of Qi stream</param>
            <returns>Return value</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.GetWindowValues(System.String,System.String,System.String)">
            <name>
            Get Window of Values
            </name> 
            <summary>
            Select multiple values from a Qi data stream
            </summary>
            <param name="streamId">Qi stream name</param>
            <param name="startIndex">Qi data stream value index start value</param>
            <param name="endIndex">Qi data stream value index end value</param>
            <returns>data values</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.GetWindowValues(System.String,System.String,System.String,OSIsoft.Qi.QiBoundaryType)">
            <name>
            Get Window of Values
            </name> 
            <summary>
            Select multiple values from a Qi data stream
            </summary>
            <param name="streamId">Qi stream name</param>
            <param name="startIndex">Qi data stream value index start value</param>
            <param name="endIndex">Qi data stream value index end value</param>
            <param name="boundaryType">Boundary condition for range</param>
            <returns>data values</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.GetWindowValues(System.String,System.String,System.String,OSIsoft.Qi.QiBoundaryType,System.String)">
            <name>
            Get Window of Values
            </name> 
            <summary>
            Select multiple values from a Qi data stream
            </summary>
            <param name="streamId">Qi stream name</param>
            <param name="startIndex">Qi data stream value index start value</param>
            <param name="endIndex">Qi data stream value index end value</param>
            <param name="boundaryType">Boundary condition for range</param>
            <param name="filterExpression">Filter expression</param>
            <returns>data values</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.GetWindowValues(System.String,System.String,OSIsoft.Qi.QiBoundaryType,System.String,OSIsoft.Qi.QiBoundaryType,System.String)">
            <name>
            Get Window of Values
            </name> 
            <summary>
            Select multiple values from a Qi data stream
            </summary>
            <param name="streamId">Qi stream name</param>
            <param name="startIndex">Qi data stream value index start value</param>
            <param name="startBoundaryType">Start boundary condition for range</param>
            <param name="endIndex">Qi data stream value index end value</param>
            <param name="endBoundaryType">End boundary condition for range</param>
            <param name="filterExpression">Filter expression</param>
            <returns>data values</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.GetWindowValues(System.String,System.String,OSIsoft.Qi.QiBoundaryType,System.String,OSIsoft.Qi.QiBoundaryType,System.String,System.String)">
            <name>
            Get Window of Values
            </name> 
            <summary>
            Select multiple values from a Qi data stream
            </summary>
            <param name="streamId">Qi stream name</param>
            <param name="startIndex">Qi data stream value index start value</param>
            <param name="startBoundaryType">Start boundary condition for range</param>
            <param name="endIndex">Qi data stream value index end value</param>
            <param name="endBoundaryType">End boundary condition for range</param>
            <param name="filterExpression">Filter expression</param>
            <param name="selectExpression">Filter expression</param>
            <returns>data values</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.GetWindowValues(System.String,System.String,System.String,OSIsoft.Qi.QiBoundaryType,System.Int32,System.String)">
            <name>
            Get Windows of Values
            </name> 
            <summary>
            Select multiple values from a Qi data stream
            </summary>
            <param name="streamId">Qi stream name</param>
            <param name="startIndex">Qi data stream value index start value</param>
            <param name="endIndex">Qi data stream value index end value</param>
            <param name="boundaryType">Boundary condition for range</param>
            <param name="count">Boundary condition for range</param>
            <param name="continuationToken">Boundary condition for range</param>
            <returns>data values</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.GetWindowValues(System.String,System.String,System.String,OSIsoft.Qi.QiBoundaryType,System.String,System.Int32,System.String)">
            <name>
            Get Windows of Values
            </name> 
            <summary>
            Select multiple values from a Qi data stream
            </summary>
            <param name="streamId">Qi stream name</param>
            <param name="startIndex">Qi data stream value index start value</param>
            <param name="endIndex">Qi data stream value index end value</param>
            <param name="boundaryType">Boundary condition for range</param>
            <param name="filterExpression">Filter expression</param>
            <param name="count">Boundary condition for range</param>
            <param name="continuationToken">Boundary condition for range</param>
            <returns>data values</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.GetWindowValues(System.String,System.String,OSIsoft.Qi.QiBoundaryType,System.String,OSIsoft.Qi.QiBoundaryType,System.String,System.Int32,System.String)">
            <name>
            Get Windows of Values
            </name> 
            <summary>
            Select multiple values from a Qi data stream
            </summary>
            <param name="streamId">Qi stream name</param>
            <param name="startIndex">Qi data stream value index start value</param>
            <param name="startBoundaryType">Start boundary condition for range</param>
            <param name="endIndex">Qi data stream value index end value</param>
            <param name="endBoundaryType">End boundary condition for range</param>
            <param name="filterExpression">Filter expression</param>
            <param name="count">Boundary condition for range</param>
            <param name="continuationToken">Boundary condition for range</param>
            <returns>data values</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.GetRangeValues(System.String,System.String,System.Int32)">
            <name>
            Get Range of Values
            </name> 
            <summary>
            Select multiple values from a Qi data stream
            </summary>
            <param name="streamId">Qi stream name</param>
            <param name="startIndex">Qi data stream value index start value</param>
            <param name="count">The maximum number of values to return</param>
            <returns>data values</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.GetRangeValues(System.String,System.String,System.Int32,System.Boolean)">
            <name>
            Get Range of Values
            </name> 
            <summary>
            Select multiple values from a Qi data stream
            </summary>
            <param name="streamId">Qi stream name</param>
            <param name="startIndex">Qi data stream value index start value</param>
            <param name="count">The maximum number of values to return</param>
            <param name="reversed">true to reverse the order of retrieval</param>
            <returns>data values</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.GetRangeValues(System.String,System.String,System.Int32,OSIsoft.Qi.QiBoundaryType)">
            <name>
            Get Range of Values
            </name> 
            <summary>
            Select multiple values from a Qi data stream
            </summary>
            <param name="streamId">Qi stream name</param>
            <param name="startIndex">Qi data stream value index start value</param>
            <param name="count">The maximum number of values to return</param>
            <param name="boundaryType">boundary condition for the start index</param>
            <returns>data values</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.GetRangeValues(System.String,System.String,System.Int32,System.Int32,System.Boolean,OSIsoft.Qi.QiBoundaryType)">
            <name>
            Get Range of Values
            </name> 
            <summary>
            Select multiple values from a Qi data stream
            </summary>
            <param name="streamId">Qi stream name</param>
            <param name="startIndex">Qi data stream value index start value</param>
            <param name="skip">The number of events to skip before returning values</param>
            <param name="count">The maximum number of values to return</param>
            <param name="reversed">true to reverse the order of retrieval</param>
            <param name="boundaryType">boundary condition for the start index</param>
            <returns>data values</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.GetRangeValues(System.String,System.String,System.Int32,System.Int32,System.Boolean,OSIsoft.Qi.QiBoundaryType,System.String)">
            <name>
            Get Range of Values
            </name> 
            <summary>
            Select multiple values from a Qi data stream
            </summary>
            <param name="streamId">Qi stream name</param>
            <param name="startIndex">Qi data stream value index start value</param>
            <param name="skip">The number of events to skip before returning values</param>
            <param name="count">The maximum number of values to return</param>
            <param name="reversed">true to reverse the order of retrieval</param>
            <param name="boundaryType">boundary condition for the start index</param>
            <param name="filterExpression">Filter expression</param>
            <returns>data values</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.GetIntervals(System.String,System.String,System.String,System.Int32)">
            <name>
            Get Intervals
            </name> 
            <summary>
            Select a set of values from a Qi data stream.
            A value will be returned for the start and end index and (count - 2) other values at evenly spaces intervals between the start and end. 
            </summary>
            <param name="streamId">Qi stream name</param>
            <param name="startIndex">Qi data stream value index start value</param>
            <param name="endIndex">Qi data stream value index end value</param>
            <param name="count">The number of values to return</param>
            <returns>data values</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.GetIntervals(System.String,System.String,System.String,System.Int32,System.String)">
            <name>
            Get Intervals
            </name> 
            <summary>
            Select a set of values from a Qi data stream.
            A value will be returned for the start and end index and (count - 2) other values at evenly spaces intervals between the start and end. 
            </summary>
            <param name="streamId">Qi stream name</param>
            <param name="startIndex">Qi data stream value index start value</param>
            <param name="endIndex">Qi data stream value index end value</param>
            <param name="count">The number of values to return</param>
            <param name="count">A filter to apply to stream before creating aggregates</param>
            <returns>data values</returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.InsertValue(System.String)">
            <name>
            Insert Single Value
            </name> 
            <summary>
            Add a value to a qi data stream. If the a value already exists at the specified index an error is returned.
            </summary>
            <param name="streamId">Qi stream name</param>
            <returns></returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.InsertValues(System.String)">
            <name>
            Insert Mutiple Values
            </name> 
            <summary>
            Adds a set of values to a qi data stream. If the a value already exists at a specified index an error is returned.
            </summary>
            <param name="streamId">Qi stream name</param>
            <returns></returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.InsertValues">
            <name>
            Insert Mutiple Values
            </name> 
            <summary>
            Adds a set of values to a set of qi data streams. If the a value already exists at a specified index an error is returned.
            </summary>      
            <returns></returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.ReplaceValue(System.String)">
            <name>
            Replace Single Value
            </name> 
            <summary>
            Update a value in a qi data stream. If a value doesn't exist at the specified index an error is returned.
            </summary>
            <param name="streamId">Qi stream name</param>
            <returns></returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.ReplaceValues(System.String)">
            <name>
            Replace Mutiple Values
            </name> 
            <summary>
            Update a set of values in a qi data stream. If a value doesn't exist at a specified index an error is returned.
            </summary>
            <param name="streamId">Qi stream name</param>
            <returns></returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.ReplaceValues">
            <name>
            Replace Mutiple Values
            </name> 
            <summary>
            Update a set of values in a set of qi data streams. If a value doesn't exist at a specified index an error is returned.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.UpdateValue(System.String)">
            <name>
            Update Single Value
            </name> 
            <summary>
            Add or update a value in a qi data stream
            </summary>
            <param name="streamId">Qi stream name</param>
            <returns></returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.UpdateValues(System.String)">
            <name>
            Update Mutiple Values
            </name> 
            <summary>
            Add or update multiple values in a qi data stream
            </summary>
            <param name="streamId">Qi stream name</param>
            <returns></returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.UpdateValues">
            <name>
            Update Mutiple Values
            </name> 
            <summary>
            Add or update multiple values in a set of qi data streams.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.PatchValue(System.String,System.String)">
            <name>
            Replace Single Value
            </name> 
            <summary>
            Update a value in a qi data stream. If a value doesn't exist at the specified index an error is returned.
            </summary>
            <param name="streamId">Qi stream name</param>
            <returns></returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.PatchValues(System.String,System.String)">
            <name>
            Replace Mutiple Values
            </name> 
            <summary>
            Update a set of values in a qi data stream. If a value doesn't exist at a specified index an error is returned.
            </summary>
            <param name="streamId">Qi stream name</param>
            <returns></returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.RemoveValue(System.String,System.String)">
            <name>
            Remove Single Value
            </name> 
            <summary>
            Remove a single value from a Qi data stream
            </summary>
            <param name="streamId">Qi stream name</param>
            <param name="index">Qi data stream index value</param>
            <returns></returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.RemoveValues(System.String,System.String[])">
            <name>
            Remove Mutiple Values
            </name> 
            <summary>
            Removes a set of values in a qi data stream. If a value doesn't exist at a specified index an error is returned.
            </summary>
            <param name="streamId">Qi stream name</param>
            <param name="index">An array of indexes to remove</param>
            <returns></returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.CreateRemoveValuesRequest(System.String,System.String[])">
            <name>
            Remove Mutiple Values
            </name> 
            <summary>
            Removes a set of values in a qi data stream. If a value doesn't exist at a specified index an error is returned.
            </summary>
            <param name="streamId">Qi stream name</param>
            <param name="index">An array of indexes to remove</param>
            <returns></returns>
        </member>
        <member name="M:OSIsoft.Qi.Http.Repository.StreamDataController.RemoveWindowValues(System.String,System.String,System.String)">
            <name>
            Remove Multiple Values
            </name> 
            <summary>
            Remove mutiple values from a Qi data stream
            </summary>
            <param name="streamId">Qi stream name</param>
            <param name="startIndex">Qi data stream value index start value</param>
            <param name="endIndex">Qi data stream value index end value</param>
            <returns></returns>
        </member>
    </members>
</doc>
